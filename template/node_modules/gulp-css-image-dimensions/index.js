var through = require("through2"),
	gutil = require("gulp-util"),
	sizeOf = require('image-size'),
	path = require('path');

module.exports = function (givenImagesPath) {
	"use strict";

	function cssImageDimensions(file, enc, callback) {
		/*jshint validthis:true*/

		var imagesPath;

		if (!givenImagesPath) {
			imagesPath = path.dirname(file.path);
		} else {
			imagesPath = path.join(path.dirname(file.path), givenImagesPath);
			if (path.resolve(givenImagesPath) == path.normalize(givenImagesPath)) {
				imagesPath = givenImagesPath;
			}
		}

		// Do nothing if no contents
		if (file.isNull()) {
			this.push(file);
			return callback();
		}

		if (file.isStream()) {

			// accepting streams is optional
			this.emit("error",
				new gutil.PluginError("gulp-css-image-dimensions", "Stream content is not supported"));
			return callback();
		}

		// check if file.contents is a `Buffer`
		if (file.isBuffer()) {
			var newContent = String(file.contents).replace(/image-height\([',"]([^\)]+)[',"]\)/g, getHeight);
			newContent = newContent.replace(/image-width\([',"]([^\)]+)[',"]\)/g, getWidth);
			file.contents = new Buffer(newContent);

			this.push(file);

		}

		function getHeight(image, imagePath) {
			return sizeOf(path.join(imagesPath, imagePath)).height + 'px';
		}

		function getWidth(image, imagePath) {
			return sizeOf(path.join(imagesPath, imagePath)).width + 'px';
		}

		return callback();
	}

	return through.obj(cssImageDimensions);
};
